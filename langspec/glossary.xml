<?xml version="1.0" encoding="UTF-8"?><appendix xmlns:db="http://docbook.org/ns/docbook" xmlns="http://docbook.org/ns/docbook" xml:id="glossary"><title>Glossary</title><glosslist><glossentry><glossterm>Namespaces
          in XML</glossterm><glossdef><para>Unless otherwise noted, the term <firstterm>Namespaces
          in XML</firstterm> refers equally to <biblioref linkend="xmlns10"/> and <biblioref linkend="xmlns11"/>.</para></glossdef></glossentry><glossentry><glossterm>XML</glossterm><glossdef><para>XProc is intended to work equally well with <biblioref linkend="xml10"/> and
          <biblioref linkend="xml11"/>. Unless otherwise noted, the term
        “<firstterm>XML</firstterm>” refers equally to both versions.</para></glossdef></glossentry><glossentry><glossterm>ancestors</glossterm><glossdef><para>The <firstterm>ancestors</firstterm> of a step, if it has
          any, are its <glossterm>container</glossterm> and the ancestors of its
          container.</para></glossdef></glossentry><glossentry><glossterm>atomic step</glossterm><glossdef><para>An <firstterm>atomic step</firstterm> is a step that
          performs a unit of XML processing, such as XInclude or transformation, and has no internal
            <glossterm>subpipeline</glossterm>. </para></glossdef></glossentry><glossentry><glossterm>bag-merger</glossterm><glossdef><para>The <firstterm>bag-merger</firstterm> of two or more bags
        (where a bag is an unordered list or, equivalently, something like a set except that it may
        contain duplicates) is a bag constructed by starting with an empty bag and adding each
        member of each of the input bags in turn to it. It follows that the cardinality of the
        result is the sum of the cardinality of all the input bags.</para></glossdef></glossentry><glossentry><glossterm>by
                  source</glossterm><glossdef><para>A document is specified <firstterm>by
                  source</firstterm> if it references a specific port on another step.</para></glossdef></glossentry><glossentry><glossterm>by URI</glossterm><glossdef><para>A document is specified <firstterm>by URI</firstterm>
                if it is referenced with a URI.</para></glossdef></glossentry><glossentry><glossterm>compound step</glossterm><glossdef><para>A <firstterm>compound step</firstterm> is a step that
          contains a <glossterm>subpipeline</glossterm>.</para></glossdef></glossentry><glossentry><glossterm>connection</glossterm><glossdef><para>A <firstterm>connection</firstterm> associates an input
          or output port with some data source.</para></glossdef></glossentry><glossentry><glossterm>contained
            steps</glossterm><glossdef><para>The steps that occur directly within, or within
          non-step wrappers directly within, a step are called that step's <firstterm>contained
            steps</firstterm>. In other words, “container” and “contained steps” are inverse
          relationships.</para></glossdef></glossentry><glossentry><glossterm>container</glossterm><glossdef><para>A compound step or multi-container step is a
            <firstterm>container</firstterm> for the steps directly within it or within non-step
          wrappers directly within it.</para></glossdef></glossentry><glossentry><glossterm>declared inputs</glossterm><glossdef><para>The input ports declared on a step are its
            <firstterm>declared inputs</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>declared options</glossterm><glossdef><para>The options declared on a step are its
            <firstterm>declared options</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>declared outputs</glossterm><glossdef><para>The output ports declared on a step are its
            <firstterm>declared outputs</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>default readable port</glossterm><glossdef><para>The
                <firstterm>default readable port</firstterm>, which may be undefined, is a specific
              step name/port name pair from the set of readable ports.</para></glossdef></glossentry><glossentry><glossterm>dynamic error</glossterm><glossdef><para>A <firstterm>dynamic error</firstterm> is one which
          occurs while a pipeline is being evaluated.</para></glossdef></glossentry><glossentry><glossterm>empty environment</glossterm><glossdef><para>The <firstterm>empty environment</firstterm>
          contains no readable ports, an undefined default readable port and no in-scope
          bindings.</para></glossdef></glossentry><glossentry><glossterm>empty sequence</glossterm><glossdef><para>An <firstterm>empty sequence</firstterm> of
                documents is specified with the <tag>p:empty</tag> element.</para></glossdef></glossentry><glossentry><glossterm>environment</glossterm><glossdef><para>The <firstterm>environment</firstterm> is a
          context-dependent collection of information available within subpipelines.</para></glossdef></glossentry><glossentry><glossterm>extension attribute</glossterm><glossdef><para>An element from the XProc namespace
            <rfc2119>may</rfc2119> have any attribute not from the XProc namespace, provided that
          the expanded-QName of the attribute has a non-null namespace URI. Such an attribute is
          called an <firstterm>extension attribute</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>in-scope bindings</glossterm><glossdef><para>The
                <firstterm>in-scope bindings</firstterm> are a set of name-value pairs, based on
                <glossterm>option</glossterm> and <glossterm>variable</glossterm>
              bindings.</para></glossdef></glossentry><glossentry><glossterm>inherited environment</glossterm><glossdef><para>The <firstterm>inherited environment</firstterm> of a
            <glossterm baseform="contained steps">contained step</glossterm> is an environment that
          is the same as the environment of its <glossterm>container</glossterm> with the <link linkend="dt-standard-modifications">standard modifications</link>. </para></glossdef></glossentry><glossentry><glossterm>inline document</glossterm><glossdef><para>An <firstterm>inline document</firstterm> is
                specified directly in the body of the element to which it connects.</para></glossdef></glossentry><glossentry><glossterm>last step</glossterm><glossdef><para>The <firstterm>last step</firstterm> in a subpipeline is its
          last step in document order.</para></glossdef></glossentry><glossentry><glossterm>matches</glossterm><glossdef><para>A step <firstterm>matches</firstterm> its signature if and
          only if it specifies an input for each declared input, it specifies no inputs that are not
          declared, it specifies an option for each option that is declared to be required, and it
          specifies no options that are not declared.</para></glossdef></glossentry><glossentry><glossterm>multi-container
            step</glossterm><glossdef><para>A <firstterm>multi-container
            step</firstterm> is a step that contains several alternate <glossterm baseform="subpipeline">subpipelines</glossterm>. </para></glossdef></glossentry><glossentry><glossterm>namespace fixup</glossterm><glossdef><para>To produce a serializable
              <glossterm>XML</glossterm> document, the XProc processor must sometimes add additional
            namespace nodes, perhaps even renaming prefixes, to satisfy the constraints of
              <glossterm>Namespaces in XML</glossterm>. This process is referred to as
              <firstterm>namespace fixup</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>option</glossterm><glossdef><para>An <firstterm>option</firstterm> is a name/value pair where
          the name is an <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.w3.org/TR/REC-xml-names/#dt-expname">expanded
            name</link> and the value <rfc2119>must</rfc2119> be a string or
            <type>xs:untypedAtomic</type>.</para></glossdef></glossentry>
<glossentry><glossterm>pipeline</glossterm><glossdef><para>A <firstterm>pipeline</firstterm> is a set of connected
        steps, with outputs of one step flowing into inputs of another.</para></glossdef></glossentry>
<glossentry><glossterm>primary input
            port</glossterm><glossdef><para>If a step has a document input port which is
          explicitly marked “<code>primary='true'</code>”, or if it has exactly one document input
          port and that port is <emphasis>not</emphasis> explicitly marked
            “<code>primary='false'</code>”, then that input port is the <firstterm>primary input
            port</firstterm> of the step.</para></glossdef></glossentry><glossentry><glossterm>primary output
            port</glossterm><glossdef><para>If a step has a document output port which is
          explicitly marked “<code>primary='true'</code>”, or if it has exactly one document output
          port and that port is <emphasis>not</emphasis> explicitly marked
            “<code>primary='false'</code>”, then that output port is the <firstterm>primary output
            port</firstterm> of the step.</para></glossdef></glossentry><glossentry><glossterm>readable
                ports</glossterm><glossdef><para>The <firstterm>readable
                ports</firstterm> are a set of step name/port name pairs.</para></glossdef></glossentry><glossentry><glossterm>signature</glossterm><glossdef><para>The <firstterm>signature</firstterm> of a step is the set
          of inputs, outputs, and options that it is declared to accept.</para></glossdef></glossentry><glossentry><glossterm>specified
          options</glossterm><glossdef><para>The options on a step which have specified
          values, either because a <tag>p:with-option</tag> element specifies a value or because the
          declaration included a default value, are its <firstterm>specified
          options</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>static error</glossterm><glossdef><para>A <firstterm>static error</firstterm> is one which can
          be detected before pipeline evaluation is even attempted.</para></glossdef></glossentry><glossentry><glossterm>step</glossterm><glossdef><para>A <firstterm>step</firstterm> is the basic computational unit
          of a pipeline.</para></glossdef></glossentry><glossentry><glossterm>step type exports</glossterm><glossdef><para>The <firstterm>step type exports</firstterm> of an
        XProc element, against the background of a set of URIs of resources already visited (call
        this set <emphasis>Visited</emphasis>), are defined by cases.</para></glossdef></glossentry><glossentry><glossterm>subpipeline</glossterm><glossdef><para>Sibling steps (and the connections between them) form a
            <firstterm>subpipeline</firstterm>.</para></glossdef></glossentry><glossentry><glossterm>variable</glossterm><glossdef><para>A <firstterm>variable</firstterm> is a name/value pair
          where the name is an <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.w3.org/TR/REC-xml-names/#dt-expname">expanded name</link> and the value <rfc2119>must</rfc2119> be a string or
            <type>xs:untypedAtomic</type>.</para></glossdef></glossentry><glossentry><glossterm>visible</glossterm><glossdef><para>If two names are in the same scope, we say that they
          are <firstterm>visible</firstterm> to each other. </para></glossdef></glossentry></glosslist></appendix>
